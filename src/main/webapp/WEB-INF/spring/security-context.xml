<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd">
						
	<bean id="customAccessDenied"
		class="com.cen.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess"
		class="com.cen.security.CustomLoginSuccessHandler"></bean>
		
	<!-- 32.2.2 -->
	<!--
 	<bean id="customPasswordEncoder"
		class="com.cen.security.CustomNoOpPasswordEncoder"></bean> -->
		
	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
		
	<!-- 33강 -->
	<bean id="customUserDetailsService"
			class="com.cen.security.CustomUserDetailsService"></bean>
						
	<!--  -->
	<security:http auto-config="true" use-expressions="true">
		<!-- 특정한 URI에 접근할 때 인터셉터를 이용해서 접근을 제한하는 설정 -->
		<!-- access: 권한체크  || access의 속성값으로 사용되는 문자열은 1)표현식 2)권한명을 의미하는 문자열을 이용할 수 있습니다-->
		<!-- security:http는 기본설정이 표현식을 이용하는 것, 만약 단순한 문자열만을 이용할 때  [[use-expressions="false"]]를 지정-->
		<security:intercept-url pattern="/sample/all" 	 access="permitAll"/>		
		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/sample/admin"  access="hasRole('ROLE_ADMIN')"/>
		
		<!-- <security:form-login/> -->
		<security:form-login login-page="/customLogin"/>
		
		<!-- 1) AccessDeniedHandler 인터페이스의 구현체를 지정 -->
		<!-- 2) error-page를 지정 -->
		<!-- <security:access-denied-handler error-page="/accessError"/> -->
		<security:access-denied-handler ref="customAccessDenied"/>
		
		<!-- 31.5 CustomLoginSuccessHandler를 빈으로 등록한다 -->
		<security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess" />		
		
		<!-- 여기 맞나? -->
		<security:logout logout-url="/customLogout" invalidate-session="true"/>
		
	</security:http>
	
	<!-- 33강 -->
	<security:authentication-manager>
		<!-- <security:authentication-provider> -->
		<security:authentication-provider 
			user-service-ref="customUserDetailsService">
			
			<security:password-encoder
				ref="bcryptPasswordEncoder"/>
			<!-- 
			Configuration problem: The user-service-ref attribute cannot be used in combination with 
			childelements 'user-service', 'jdbc-user-service' or 'ldap-user-service'
			
			
			<security:jdbc-user-service 
				data-source-ref="dataSource"
				users-by-username-query="select userid, userpw, enabled from tbl_member where userid=?"
				authorities-by-username-query="select userid, auth from tbl_member_auth where userid=?"/>		
			<security:password-encoder ref="bcryptPasswordEncoder"/> -->
			
			<!-- <security:password-encoder ref="customPasswordEncoder"/> -->
			<!-- <security:user-service>
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
				<security:user name="admin"  password="{noop}admin"  authorities="ROLE_MEMBER, ROLE_ADMIN"/>
			</security:user-service> -->
		</security:authentication-provider>
	</security:authentication-manager>


</beans>

<!-- <?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="customAccessDenied"
		class="com.cen.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess"
		class="com.cen.security.CustomLoginSuccessHandler"></bean>
	<bean id="customPasswordEncoder"
		class="com.cen.security.CustomNoOpPasswordEncoder"></bean>
	
	
	<security:http>
		<security:form-login/>	
	</security:http>
	
	<security:authentication-manager>
	
		<security:authentication-provider>				
			<security:jdbc-user-service data-source-ref="dataSource"/>
			<security:password-encoder ref="customPasswordEncoder"/>
		</security:authentication-provider>	
		
			
	</security:authentication-manager>
		
		
</beans> -->